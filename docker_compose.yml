services:
  db:
    container_name: db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: my_user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U my_user"]
      interval: 10s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  seeder:
    build: ./room_management_svc
    ports:
      - "50051:50051"
    environment:
      - DB_NAME=my_user
      - DB_USER=my_user
      - DB_PASSWORD=my_password
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

    command: ["python", "src/yoyo_migration.py"]


  room_management_svc:
    build: ./room_management_svc
    ports:
      - "50051:50051"
    environment:
      - DB_NAME=my_user
      - DB_USER=my_user
      - DB_PASSWORD=my_password
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
    depends_on:
      seeder:
        condition: service_completed_successfully

    command: ["python", "src/main.py"]

  api_gateway:
    build: ./api_gateway
    environment:
      - GRPC_SERVER_ADDRESS=room_management_svc:50051
    ports:
      - "8080:8080"
    depends_on:
      - room_management_svc

volumes:
  postgres_data:
